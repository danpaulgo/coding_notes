{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qc

\f0\b\fs26 \cf0 Intro to HTTP\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\i\b0 \cf0 HTTP stands for Hyper Text Transfer Protocol and is the set of rules that govern how two devices should communicate over the internet\
\

\i0\b \
Command Line HTTP
\i\b0 \
\

\i0 \ul HTTP Request Format\
\

\b \ulnone Request-Line -> Headers -> Blank Line -> Request Body
\b0 \ul \
\
\ulnone Request Line:\ul \
\
\ulnone GET or POST, uri, \'93HTTP/\'93, version\
ex: 
\b ` GET /xml HTTP/1.1 `\
\

\b0 - GET request is used to view a resource on the server\
- Post request is used to update or make a change to a resource on the server\
- URI stands for uniform resource identifier, such as XML or HTML\
\
Header:\
\
** May include various types of information related to request being made such as host, user-agent, and language\
\
Ex:\
Host: httbin.org\
User-Agent: telnet\
Accept-Language: en-US\
\
Request Body aka Payload (POST requests only):\
\
ex:\

\b ` POST /post HTTP/1.1\
Host: httpbin.org\
Content-Length: 26\
\
firstname=Dan&language=Eng `
\b0 \
\
** \'93Content-Length\'94 must be equal to length of string\
** Must leave blank line between header and request\
\
Requesting information from servers using query string:\
\
ex:\

\b ` GET /get?search=search_term&city=new_york `
\b0 \
Variable key/value separated by \'93=\'94 and pairs separated by \'93&\'94\
\
\
\ul HTTP Response Format\
\
\ulnone Status Line:\
\
\'93HTTP/\'93, version, status code, status message\
ex: 
\b HTTP/1.1 418 I\'92M A TEAPOT\
\

\b0 Status Codes and meanings:\
\
200 - Success\
301s - Resource moved\
404 - Not found\
400s - Something went wrong\
500s - Server error\
\
Header:\
\
** Includes information about response such as type of server, date/time, and content type\
\
Ex:\
Server:nginx/0.7.67\
Date: Mon, 13 Jun 2011 04:25:38 GMT\
Content-Type: application/xml\
\
Response Body (aka payload):\
\
Information requested, in requested format\
\
\

\b Browser HTTP\
\

\b0 ** The browser is a GUI (graphic user interface) for HTTP, allowing requests to include color, format, and animation\
\
** To see specific request information from a particular URL, look at the \'93Network\'94 tab in \'93Developer Tools\'94 (View > Developer > Developer Tools)\
\
** Every URL address and link is technically a GET request submitted to a server\
\
\
\ul HTML Forms\
\
\ulnone Pieces of HTML Form:\
1. Form tags\
2. Method attribute (\'93get\'94 or \'93post\'94)\
3. Action attribute (URL where data will be sent)\
4. Form elements (input, select [dropdown], textarea, button)\
5. Submit button (optional. Pressing \'93enter\'94 has same result)\
\
\
\ul \'93Post\'94 vs \'93Get\'94\
\
\ulnone - Post request requires content-type and content-length in header\
- In post request, query string data is included in payload (below header)\
- In get request, query string data is included in request line (above header)\
\
** Other request methods exist, such as \'93put\'94 and \'93delete\'94\
\
\
\
\ul \
\
\ulnone \
\
\
\
\
}